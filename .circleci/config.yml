version: 2

general:
  branches:
    only:
      - master-ci-circleci

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: 'circleci/node:7.10.1'

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'v1-dependencies-{{ checksum "package.json" }}'
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: 'v1-dependencies-{{ checksum "package.json" }}'
      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./*
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          command: npm run test-circleci
          environment:
            MOCHA_FILE: testResults/test-results.xml
          when: always
      - store_test_results:
          path: testResults
      - store_artifacts:
          path: testResults
  deploy:
    <<: *defaults
    steps:
      - run:
        name: Install GCloud SDK
        command: |
          export CLOUDSDK_CORE_DISABLE_PROMPTS=1
          # Google Cloud SDK is pinned for build reliability. Bump if the SDK complains about deprecation.
          export SDK_FILENAME=google-cloud-sdk-$GCLOUD_SDK_VERSION-linux-x86_64.tar.gz
          echo $GCLOUD_SDK_VERSION
          echo ${SDK_FILENAME}
          echo $HOME
          curl -O -J https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/$SDK_FILENAME
          tar -zxvf $SDK_FILENAME --directory $HOME
          export PATH=$PATH:$HOME/google-cloud-sdk/bin
          # Install Google App Engine SDK
          # Install app & dev dependencies, test, deploy, test deployment (--quiet --verbosity=error )
          echo $GOOGLE_CLIENT_SECRET > client-secret.json
          gcloud auth activate-service-account --key-file client-secret.json
          gcloud app deploy --project $GOOGLE_PROJECT_ID --version=beta-ci-circleci --no-stop-previous-version

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
